@startuml

title __SWT's Class Diagram__\n

  namespace org.jfree.experimental.swt {
    class org.jfree.experimental.swt.SWTGraphics2D {
        - backgroundColor : Color
        - colorsPool : Map
        - composite : Composite
        - fontsPool : Map
        - gc : GC
        - hints : RenderingHints
        - resourcePool : List
        - transformsPool : Map
        + SWTGraphics2D()
        + addRenderingHints()
        + clearRect()
        + clip()
        + clipRect()
        + copyArea()
        + create()
        + dispose()
        + draw()
        + drawArc()
        + drawGlyphVector()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawImage()
        + drawLine()
        + drawOval()
        + drawPolygon()
        + drawPolyline()
        + drawRenderableImage()
        + drawRenderedImage()
        + drawRoundRect()
        + drawString()
        + drawString()
        + drawString()
        + drawString()
        + fill()
        + fillArc()
        + fillOval()
        + fillPolygon()
        + fillRect()
        + fillRoundRect()
        + getBackground()
        + getClip()
        + getClipBounds()
        + getColor()
        + getComposite()
        + getDeviceConfiguration()
        + getFont()
        + getFontMetrics()
        + getFontRenderContext()
        + getPaint()
        + getRenderingHint()
        + getRenderingHints()
        + getStroke()
        + getTransform()
        + hit()
        + rotate()
        + rotate()
        + scale()
        + setBackground()
        + setClip()
        + setClip()
        + setColor()
        + setComposite()
        + setFont()
        + setPaint()
        + setPaintMode()
        + setRenderingHint()
        + setRenderingHints()
        + setStroke()
        + setTransform()
        + setXORMode()
        + shear()
        + transform()
        + translate()
        + translate()
        - addToResourcePool()
        - disposeResourcePool()
        - getSwtColorFromPool()
        - getSwtFontFromPool()
        - getSwtTransformFromPool()
        - switchColors()
        - toAwtLineCap()
        - toAwtLineJoin()
        - toAwtTransform()
        - toSwtLineCap()
        - toSwtLineJoin()
        - toSwtPath()
    }
  }
  

  namespace org.jfree.experimental.swt {
    class org.jfree.experimental.swt.SWTPaintCanvas {
        - myColor : Color
        + SWTPaintCanvas()
        + SWTPaintCanvas()
        + dispose()
        + getColor()
        + setBackground()
        + setColor()
        + setForeground()
    }
  }
  

  namespace org.jfree.experimental.swt {
    class org.jfree.experimental.swt.SWTUtils {
        {static} # DUMMY_PANEL : JPanel
        {static} - Az : String
        {static} + convertAWTImageToSWT()
        {static} + convertToSWT()
        {static} + toAwtColor()
        {static} + toAwtFont()
        {static} + toAwtFont()
        {static} + toAwtMouseEvent()
        {static} + toAwtPoint()
        {static} + toAwtRectangle()
        {static} + toSwtColor()
        {static} + toSwtColor()
        {static} + toSwtFontData()
        {static} + toSwtPoint()
        {static} + toSwtPoint()
        {static} + toSwtRectangle()
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
