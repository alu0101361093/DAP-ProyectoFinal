@startuml

title __RENDERER's Class Diagram__\n

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.AbstractRendererTest {
          + testAutoPopulateFlagDefaults()
          + testCloning()
          + testCloning2()
          + testEquals()
          + testEquals2()
          + testEquals_ObjectList()
          + testEquals_ObjectList2()
          + testEquals_ObjectList3()
          + testEquals_ObjectList4()
          + testEventNotification()
          + testFillPaintLookup()
          + testOutlinePaintLookup()
          + testPaintLookup()
          + testSerialization()
          + testSetItemLabelFont()
          + testSetItemLabelPaint()
          + testSetItemLabelsVisible()
          + testSetNegativeItemLabelPosition()
          + testSetOutlinePaint()
          + testSetOutlineStroke()
          + testSetPaint()
          + testSetPositiveItemLabelPosition()
          + testSetSeriesVisible()
          + testSetShape()
          + testSetStroke()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener {
          + lastEvent : RendererChangeEvent
          + MyRendererChangeListener()
          + rendererChanged()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.AbstractRendererTest.TestRenderer {
          + setTreatLegendShapeAsLine()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.AreaRendererEndTypeTest {
          + testEquals()
          + testSerialization()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.DefaultPolarItemRendererTest {
          + testCloning()
          + testEquals()
          + testHashcode()
          + testSerialization()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.GrayPaintScaleTest {
          {static} - EPSILON : double
          + testCloning()
          + testConstructor()
          + testEquals()
          + testGetPaint()
          + testSerialization()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.LookupPaintScaleTest {
          {static} - EPSILON : double
          + testCloning()
          + testConstructor1()
          + testConstructor2()
          + testEquals()
          + testGeneral()
          + testSerialization()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.OutlierTest {
          {static} - EPSILON : double
          + testCloning()
          + testConstructor()
          + testEquals()
          + testSerialization()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.RendererChangeDetector {
          - notified : boolean
          + RendererChangeDetector()
          + getNotified()
          + rendererChanged()
          + setNotified()
      }
    }
  }
  

  namespace org.jfree.chart {
    namespace renderer {
      class org.jfree.chart.renderer.RendererUtilitiesTest {
          + test3561093()
          + testFindLiveItemsLowerBound_Ascending()
          + testFindLiveItemsLowerBound_Descending()
          + testFindLiveItemsLowerBound_Unordered()
          + testFindLiveItemsUpperBound_Ascending()
          + testFindLiveItemsUpperBound_Descending()
          + testFindLiveItemsUpperBound_Unordered()
      }
    }
  }
  

  org.jfree.chart.renderer.AbstractRendererTest +-down- org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener
  org.jfree.chart.renderer.AbstractRendererTest +-down- org.jfree.chart.renderer.AbstractRendererTest.TestRenderer
  org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener .up.|> RendererChangeListener
  org.jfree.chart.renderer.RendererChangeDetector .up.|> RendererChangeListener


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
